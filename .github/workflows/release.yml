name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create release for'
        required: true
        default: 'v0.1.0'

permissions:
  contents: write
  
env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: gsm-linux-x86_64
            
          # TODO: Add ARM64 Linux support
          # Currently disabled due to GLIBC version mismatch in cross-compilation
          # Alternative: Use GitHub's ARM64 runners when available
            
          # macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            name: gsm-macos-x86_64
            
          - target: aarch64-apple-darwin
            os: macos-latest
            name: gsm-macos-aarch64
            
          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: gsm-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (Linux musl)
        if: contains(matrix.target, 'musl')
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build release binary (cross)
        if: contains(matrix.target, 'musl')
        run: cross build --release --target ${{ matrix.target }}
        
      - name: Build release binary (cargo)
        if: ${{ !contains(matrix.target, 'musl') }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/gsm ${{ matrix.name }}
          strip ${{ matrix.name }}

      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/gsm.exe ${{ matrix.name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.name }}
          body: |
            # GitHub Secrets Manager (GSM)
            
            ## Download
            
            Choose the appropriate binary for your platform:
            
            - **Linux x86_64**: `gsm-linux-x86_64` (static binary)

            - **macOS x86_64**: `gsm-macos-x86_64`
            - **macOS ARM64**: `gsm-macos-aarch64`
            - **Windows x86_64**: `gsm-windows-x86_64.exe`
            
            ## Installation
            
            1. Download the appropriate binary for your platform
            2. Make it executable (Linux/macOS): `chmod +x gsm-*`
            3. Move to your PATH: `mv gsm-* /usr/local/bin/gsm`
          generate_release_notes: true

 